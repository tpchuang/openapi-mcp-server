{
  "openapi": "3.0.1",
  "info": {
    "title": "FakeRESTApi.Web V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/Activities": {
      "get": {
        "tags": [
          "Activities"
        ],
        "description": "Retrieve a list of all activities",
        "summary": "Get all activities",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Activities"
        ],
        "description": "Create a new activity",
        "summary": "Create an activity",
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Activities/{id}": {
      "get": {
        "tags": [
          "Activities"
        ],
        "description": "Retrieve a specific activity by its ID",
        "summary": "Get activity by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Activities"
        ],
        "description": "Update an existing activity by its ID",
        "summary": "Update activity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activities"
        ],
        "description": "Delete an activity by its ID",
        "summary": "Delete activity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Authors": {
      "get": {
        "tags": [
          "Authors"
        ],
        "description": "Retrieve a list of all authors",
        "summary": "Get all authors",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Authors"
        ],
        "description": "Create a new author",
        "summary": "Create an author",
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Authors/authors/books/{idBook}": {
      "get": {
        "tags": [
          "Authors"
        ],
        "description": "Retrieve all authors associated with a specific book",
        "summary": "Get authors by book ID",
        "parameters": [
          {
            "name": "idBook",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Authors/{id}": {
      "get": {
        "tags": [
          "Authors"
        ],
        "description": "Retrieve a specific author by their ID",
        "summary": "Get author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Authors"
        ],
        "description": "Update an existing author by their ID",
        "summary": "Update author",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Authors"
        ],
        "description": "Delete an author by their ID",
        "summary": "Delete author",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Books": {
      "get": {
        "tags": [
          "Books"
        ],
        "description": "Retrieve a list of all books in the bookstore",
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "description": "Add a new book to the bookstore catalog",
        "summary": "Create a book",
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Books/{id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "description": "Retrieve details of a specific book by its ID",
        "summary": "Get book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "description": "Update an existing book's information by its ID",
        "summary": "Update book",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "description": "Remove a book from the bookstore catalog by its ID",
        "summary": "Delete book",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/CoverPhotos": {
      "get": {
        "tags": [
          "CoverPhotos"
        ],
        "description": "Retrieve a list of all book cover photos",
        "summary": "Get all cover photos",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoverPhoto"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoverPhoto"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoverPhoto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CoverPhotos"
        ],
        "description": "Upload a new book cover photo",
        "summary": "Create a cover photo",
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CoverPhoto"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CoverPhoto"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CoverPhoto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CoverPhotos/books/covers/{idBook}": {
      "get": {
        "tags": [
          "CoverPhotos"
        ],
        "description": "Retrieve all cover photos for a specific book",
        "summary": "Get cover photos by book ID",
        "parameters": [
          {
            "name": "idBook",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoverPhoto"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoverPhoto"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoverPhoto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CoverPhotos/{id}": {
      "get": {
        "tags": [
          "CoverPhotos"
        ],
        "description": "Retrieve a specific cover photo by its ID",
        "summary": "Get cover photo by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CoverPhotos"
        ],
        "description": "Update an existing cover photo by its ID",
        "summary": "Update cover photo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CoverPhoto"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CoverPhoto"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CoverPhoto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CoverPhotos"
        ],
        "description": "Delete a cover photo by its ID",
        "summary": "Delete cover photo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Retrieve a list of all registered users",
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Register a new user account",
        "summary": "Create a user",
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Retrieve a specific user by their ID",
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update an existing user's information by their ID",
        "summary": "Update user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete a user account by their ID",
        "summary": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Activity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "completed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Author": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idBook": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "excerpt": {
            "type": "string",
            "nullable": true
          },
          "publishDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CoverPhoto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idBook": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}
